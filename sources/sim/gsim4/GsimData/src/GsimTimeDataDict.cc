//
// File generated by rootcint at Sun Jun  3 02:38:16 2012

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdIGsimTimeDataDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "GsimTimeDataDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void GsimTimeData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_GsimTimeData(void *p = 0);
   static void *newArray_GsimTimeData(Long_t size, void *p);
   static void delete_GsimTimeData(void *p);
   static void deleteArray_GsimTimeData(void *p);
   static void destruct_GsimTimeData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GsimTimeData*)
   {
      ::GsimTimeData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GsimTimeData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GsimTimeData", ::GsimTimeData::Class_Version(), "././GsimData/GsimTimeData.h", 25,
                  typeid(::GsimTimeData), DefineBehavior(ptr, ptr),
                  &::GsimTimeData::Dictionary, isa_proxy, 4,
                  sizeof(::GsimTimeData) );
      instance.SetNew(&new_GsimTimeData);
      instance.SetNewArray(&newArray_GsimTimeData);
      instance.SetDelete(&delete_GsimTimeData);
      instance.SetDeleteArray(&deleteArray_GsimTimeData);
      instance.SetDestructor(&destruct_GsimTimeData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GsimTimeData*)
   {
      return GenerateInitInstanceLocal((::GsimTimeData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GsimTimeData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *GsimTimeData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *GsimTimeData::Class_Name()
{
   return "GsimTimeData";
}

//______________________________________________________________________________
const char *GsimTimeData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GsimTimeData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GsimTimeData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GsimTimeData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GsimTimeData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GsimTimeData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GsimTimeData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GsimTimeData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void GsimTimeData::Streamer(TBuffer &R__b)
{
   // Stream an object of class GsimTimeData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GsimTimeData::Class(),this);
   } else {
      R__b.WriteClassBuffer(GsimTimeData::Class(),this);
   }
}

//______________________________________________________________________________
void GsimTimeData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class GsimTimeData.
      TClass *R__cl = ::GsimTimeData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "modID", &modID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy", &energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time", &time);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_GsimTimeData(void *p) {
      return  p ? new(p) ::GsimTimeData : new ::GsimTimeData;
   }
   static void *newArray_GsimTimeData(Long_t nElements, void *p) {
      return p ? new(p) ::GsimTimeData[nElements] : new ::GsimTimeData[nElements];
   }
   // Wrapper around operator delete
   static void delete_GsimTimeData(void *p) {
      delete ((::GsimTimeData*)p);
   }
   static void deleteArray_GsimTimeData(void *p) {
      delete [] ((::GsimTimeData*)p);
   }
   static void destruct_GsimTimeData(void *p) {
      typedef ::GsimTimeData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GsimTimeData

/********************************************************
* src/GsimTimeDataDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableGsimTimeDataDict();

extern "C" void G__set_cpp_environmentGsimTimeDataDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("./GsimData/GsimTimeData.h");
  G__cpp_reset_tagtableGsimTimeDataDict();
}
#include <new>
extern "C" int G__cpp_dllrevGsimTimeDataDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* GsimTimeData */
static int G__GsimTimeDataDict_162_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GsimTimeData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GsimTimeData[n];
     } else {
       p = new((void*) gvp) GsimTimeData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GsimTimeData;
     } else {
       p = new((void*) gvp) GsimTimeData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GsimTimeDataDictLN_GsimTimeData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimTimeDataDict_162_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GsimTimeData*) G__getstructoffset())->initializeDataValues();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimTimeDataDict_162_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((GsimTimeData*) G__getstructoffset())->dump((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((GsimTimeData*) G__getstructoffset())->dump();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimTimeDataDict_162_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GsimTimeData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimTimeDataDict_162_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GsimTimeData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimTimeDataDict_162_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GsimTimeData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimTimeDataDict_162_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GsimTimeData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimTimeDataDict_162_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GsimTimeData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimTimeDataDict_162_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GsimTimeData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimTimeDataDict_162_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GsimTimeData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimTimeDataDict_162_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GsimTimeData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimTimeDataDict_162_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GsimTimeData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__GsimTimeDataDict_162_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GsimTimeData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GsimTimeData(*(GsimTimeData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GsimTimeDataDictLN_GsimTimeData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GsimTimeData G__TGsimTimeData;
static int G__GsimTimeDataDict_162_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GsimTimeData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GsimTimeData*) (soff+(sizeof(GsimTimeData)*i)))->~G__TGsimTimeData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GsimTimeData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GsimTimeData*) (soff))->~G__TGsimTimeData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GsimTimeDataDict_162_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GsimTimeData* dest = (GsimTimeData*) G__getstructoffset();
   *dest = *(GsimTimeData*) libp->para[0].ref;
   const GsimTimeData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* GsimTimeData */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncGsimTimeDataDict {
 public:
  G__Sizep2memfuncGsimTimeDataDict(): p(&G__Sizep2memfuncGsimTimeDataDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncGsimTimeDataDict::*p)();
};

size_t G__get_sizep2memfuncGsimTimeDataDict()
{
  G__Sizep2memfuncGsimTimeDataDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceGsimTimeDataDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GsimTimeDataDictLN_GsimTimeData))) {
     GsimTimeData *G__Lderived;
     G__Lderived=(GsimTimeData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GsimTimeDataDictLN_GsimTimeData),G__get_linked_tagnum(&G__GsimTimeDataDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableGsimTimeDataDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__GsimTimeDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GsimTimeDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GsimTimeDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GsimTimeDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GsimTimeDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__GsimTimeDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GsimTimeDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GsimTimeDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GsimTimeDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GsimTimeDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* GsimTimeData */
static void G__setup_memvarGsimTimeData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GsimTimeDataDictLN_GsimTimeData));
   { GsimTimeData *p; p=(GsimTimeData*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->modID)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"modID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->energy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"energy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"time=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GsimTimeDataDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarGsimTimeDataDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncGsimTimeData(void) {
   /* GsimTimeData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GsimTimeDataDictLN_GsimTimeData));
   G__memfunc_setup("GsimTimeData",1177,G__GsimTimeDataDict_162_0_1, 105, G__get_linked_tagnum(&G__GsimTimeDataDictLN_GsimTimeData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("initializeDataValues",2076,G__GsimTimeDataDict_162_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dump",438,G__GsimTimeDataDict_162_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '1' imode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__GsimTimeDataDict_162_0_5, 85, G__get_linked_tagnum(&G__GsimTimeDataDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GsimTimeData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GsimTimeDataDict_162_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GsimTimeData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GsimTimeDataDict_162_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GsimTimeData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GsimTimeDataDict_162_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GsimTimeData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GsimTimeDataDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GsimTimeDataDict_162_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GsimTimeDataDict_162_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GsimTimeData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GsimTimeDataDict_162_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GsimTimeData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GsimTimeDataDict_162_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GsimTimeData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GsimTimeDataDict_162_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GsimTimeData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GsimTimeData", 1177, G__GsimTimeDataDict_162_0_17, (int) ('i'), G__get_linked_tagnum(&G__GsimTimeDataDictLN_GsimTimeData), -1, 0, 1, 1, 1, 0, "u 'GsimTimeData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GsimTimeData", 1303, G__GsimTimeDataDict_162_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GsimTimeDataDict_162_0_19, (int) ('u'), G__get_linked_tagnum(&G__GsimTimeDataDictLN_GsimTimeData), -1, 1, 1, 1, 1, 0, "u 'GsimTimeData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncGsimTimeDataDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalGsimTimeDataDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcGsimTimeDataDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__GsimTimeDataDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__GsimTimeDataDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__GsimTimeDataDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__GsimTimeDataDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__GsimTimeDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__GsimTimeDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GsimTimeDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__GsimTimeDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GsimTimeDataDictLN_GsimTimeData = { "GsimTimeData" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableGsimTimeDataDict() {
  G__GsimTimeDataDictLN_TClass.tagnum = -1 ;
  G__GsimTimeDataDictLN_TBuffer.tagnum = -1 ;
  G__GsimTimeDataDictLN_TMemberInspector.tagnum = -1 ;
  G__GsimTimeDataDictLN_TObject.tagnum = -1 ;
  G__GsimTimeDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__GsimTimeDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GsimTimeDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__GsimTimeDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GsimTimeDataDictLN_GsimTimeData.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableGsimTimeDataDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__GsimTimeDataDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__GsimTimeDataDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__GsimTimeDataDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__GsimTimeDataDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__GsimTimeDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__GsimTimeDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GsimTimeDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__GsimTimeDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GsimTimeDataDictLN_GsimTimeData),sizeof(GsimTimeData),-1,292096,(char*)NULL,G__setup_memvarGsimTimeData,G__setup_memfuncGsimTimeData);
}
extern "C" void G__cpp_setupGsimTimeDataDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupGsimTimeDataDict()");
  G__set_cpp_environmentGsimTimeDataDict();
  G__cpp_setup_tagtableGsimTimeDataDict();

  G__cpp_setup_inheritanceGsimTimeDataDict();

  G__cpp_setup_typetableGsimTimeDataDict();

  G__cpp_setup_memvarGsimTimeDataDict();

  G__cpp_setup_memfuncGsimTimeDataDict();
  G__cpp_setup_globalGsimTimeDataDict();
  G__cpp_setup_funcGsimTimeDataDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncGsimTimeDataDict();
  return;
}
class G__cpp_setup_initGsimTimeDataDict {
  public:
    G__cpp_setup_initGsimTimeDataDict() { G__add_setup_func("GsimTimeDataDict",(G__incsetup)(&G__cpp_setupGsimTimeDataDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initGsimTimeDataDict() { G__remove_setup_func("GsimTimeDataDict"); }
};
G__cpp_setup_initGsimTimeDataDict G__cpp_setup_initializerGsimTimeDataDict;

