//
// File generated by rootcint at Sun Jun  3 02:38:15 2012

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdIGsimDetectorHitDataDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "GsimDetectorHitDataDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void GsimDetectorHitData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_GsimDetectorHitData(void *p = 0);
   static void *newArray_GsimDetectorHitData(Long_t size, void *p);
   static void delete_GsimDetectorHitData(void *p);
   static void deleteArray_GsimDetectorHitData(void *p);
   static void destruct_GsimDetectorHitData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GsimDetectorHitData*)
   {
      ::GsimDetectorHitData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GsimDetectorHitData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GsimDetectorHitData", ::GsimDetectorHitData::Class_Version(), "././GsimData/GsimDetectorHitData.h", 77,
                  typeid(::GsimDetectorHitData), DefineBehavior(ptr, ptr),
                  &::GsimDetectorHitData::Dictionary, isa_proxy, 4,
                  sizeof(::GsimDetectorHitData) );
      instance.SetNew(&new_GsimDetectorHitData);
      instance.SetNewArray(&newArray_GsimDetectorHitData);
      instance.SetDelete(&delete_GsimDetectorHitData);
      instance.SetDeleteArray(&deleteArray_GsimDetectorHitData);
      instance.SetDestructor(&destruct_GsimDetectorHitData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GsimDetectorHitData*)
   {
      return GenerateInitInstanceLocal((::GsimDetectorHitData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GsimDetectorHitData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *GsimDetectorHitData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *GsimDetectorHitData::Class_Name()
{
   return "GsimDetectorHitData";
}

//______________________________________________________________________________
const char *GsimDetectorHitData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GsimDetectorHitData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GsimDetectorHitData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GsimDetectorHitData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GsimDetectorHitData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GsimDetectorHitData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GsimDetectorHitData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GsimDetectorHitData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void GsimDetectorHitData::Streamer(TBuffer &R__b)
{
   // Stream an object of class GsimDetectorHitData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GsimDetectorHitData::Class(),this);
   } else {
      R__b.WriteClassBuffer(GsimDetectorHitData::Class(),this);
   }
}

//______________________________________________________________________________
void GsimDetectorHitData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class GsimDetectorHitData.
      TClass *R__cl = ::GsimDetectorHitData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thisID", &thisID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "track", &track);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stop", &stop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hitChannel", &hitChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time", &time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "edep", &edep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pid", &pid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r", &r);
      R__insp.InspectMember(r, "r.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ek", &ek);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p", &p);
      R__insp.InspectMember(p, "p.");
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_GsimDetectorHitData(void *p) {
      return  p ? new(p) ::GsimDetectorHitData : new ::GsimDetectorHitData;
   }
   static void *newArray_GsimDetectorHitData(Long_t nElements, void *p) {
      return p ? new(p) ::GsimDetectorHitData[nElements] : new ::GsimDetectorHitData[nElements];
   }
   // Wrapper around operator delete
   static void delete_GsimDetectorHitData(void *p) {
      delete ((::GsimDetectorHitData*)p);
   }
   static void deleteArray_GsimDetectorHitData(void *p) {
      delete [] ((::GsimDetectorHitData*)p);
   }
   static void destruct_GsimDetectorHitData(void *p) {
      typedef ::GsimDetectorHitData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GsimDetectorHitData

/********************************************************
* src/GsimDetectorHitDataDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableGsimDetectorHitDataDict();

extern "C" void G__set_cpp_environmentGsimDetectorHitDataDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("./GsimData/GsimDetectorHitData.h");
  G__cpp_reset_tagtableGsimDetectorHitDataDict();
}
#include <new>
extern "C" int G__cpp_dllrevGsimDetectorHitDataDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* GsimDetectorHitData */
static int G__GsimDetectorHitDataDict_214_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GsimDetectorHitData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GsimDetectorHitData[n];
     } else {
       p = new((void*) gvp) GsimDetectorHitData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GsimDetectorHitData;
     } else {
       p = new((void*) gvp) GsimDetectorHitData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_GsimDetectorHitData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimDetectorHitDataDict_214_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GsimDetectorHitData*) G__getstructoffset())->dump();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimDetectorHitDataDict_214_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GsimDetectorHitData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimDetectorHitDataDict_214_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GsimDetectorHitData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimDetectorHitDataDict_214_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GsimDetectorHitData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimDetectorHitDataDict_214_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GsimDetectorHitData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimDetectorHitDataDict_214_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GsimDetectorHitData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimDetectorHitDataDict_214_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GsimDetectorHitData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimDetectorHitDataDict_214_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GsimDetectorHitData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimDetectorHitDataDict_214_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GsimDetectorHitData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimDetectorHitDataDict_214_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GsimDetectorHitData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__GsimDetectorHitDataDict_214_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GsimDetectorHitData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GsimDetectorHitData(*(GsimDetectorHitData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_GsimDetectorHitData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GsimDetectorHitData G__TGsimDetectorHitData;
static int G__GsimDetectorHitDataDict_214_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GsimDetectorHitData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GsimDetectorHitData*) (soff+(sizeof(GsimDetectorHitData)*i)))->~G__TGsimDetectorHitData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GsimDetectorHitData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GsimDetectorHitData*) (soff))->~G__TGsimDetectorHitData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GsimDetectorHitDataDict_214_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GsimDetectorHitData* dest = (GsimDetectorHitData*) G__getstructoffset();
   *dest = *(GsimDetectorHitData*) libp->para[0].ref;
   const GsimDetectorHitData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* GsimDetectorHitData */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncGsimDetectorHitDataDict {
 public:
  G__Sizep2memfuncGsimDetectorHitDataDict(): p(&G__Sizep2memfuncGsimDetectorHitDataDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncGsimDetectorHitDataDict::*p)();
};

size_t G__get_sizep2memfuncGsimDetectorHitDataDict()
{
  G__Sizep2memfuncGsimDetectorHitDataDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceGsimDetectorHitDataDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_GsimDetectorHitData))) {
     GsimDetectorHitData *G__Lderived;
     G__Lderived=(GsimDetectorHitData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_GsimDetectorHitData),G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableGsimDetectorHitDataDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* GsimDetectorHitData */
static void G__setup_memvarGsimDetectorHitData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_GsimDetectorHitData));
   { GsimDetectorHitData *p; p=(GsimDetectorHitData*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->thisID)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"thisID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->track)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"track=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->stop)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"stop=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hitChannel)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"hitChannel=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"time=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->edep)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"edep=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pid)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"pid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->r)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_TVector3),-1,-1,1,"r=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ek)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ek=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_TVector3),-1,-1,1,"p=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarGsimDetectorHitDataDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncGsimDetectorHitData(void) {
   /* GsimDetectorHitData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_GsimDetectorHitData));
   G__memfunc_setup("GsimDetectorHitData",1897,G__GsimDetectorHitDataDict_214_0_1, 105, G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_GsimDetectorHitData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("dump",438,G__GsimDetectorHitDataDict_214_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__GsimDetectorHitDataDict_214_0_6, 85, G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GsimDetectorHitData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GsimDetectorHitDataDict_214_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GsimDetectorHitData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GsimDetectorHitDataDict_214_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GsimDetectorHitData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GsimDetectorHitDataDict_214_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GsimDetectorHitData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GsimDetectorHitDataDict_214_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GsimDetectorHitDataDict_214_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GsimDetectorHitData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GsimDetectorHitDataDict_214_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GsimDetectorHitData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GsimDetectorHitDataDict_214_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GsimDetectorHitData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GsimDetectorHitDataDict_214_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GsimDetectorHitData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GsimDetectorHitData", 1897, G__GsimDetectorHitDataDict_214_0_18, (int) ('i'), G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_GsimDetectorHitData), -1, 0, 1, 1, 1, 0, "u 'GsimDetectorHitData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GsimDetectorHitData", 2023, G__GsimDetectorHitDataDict_214_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GsimDetectorHitDataDict_214_0_20, (int) ('u'), G__get_linked_tagnum(&G__GsimDetectorHitDataDictLN_GsimDetectorHitData), -1, 1, 1, 1, 1, 0, "u 'GsimDetectorHitData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncGsimDetectorHitDataDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalGsimDetectorHitDataDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcGsimDetectorHitDataDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__GsimDetectorHitDataDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__GsimDetectorHitDataDictLN_GsimDetectorHitData = { "GsimDetectorHitData" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableGsimDetectorHitDataDict() {
  G__GsimDetectorHitDataDictLN_TClass.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_TBuffer.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_TMemberInspector.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_TObject.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_TVector3.tagnum = -1 ;
  G__GsimDetectorHitDataDictLN_GsimDetectorHitData.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableGsimDetectorHitDataDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GsimDetectorHitDataDictLN_GsimDetectorHitData),sizeof(GsimDetectorHitData),-1,292096,(char*)NULL,G__setup_memvarGsimDetectorHitData,G__setup_memfuncGsimDetectorHitData);
}
extern "C" void G__cpp_setupGsimDetectorHitDataDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupGsimDetectorHitDataDict()");
  G__set_cpp_environmentGsimDetectorHitDataDict();
  G__cpp_setup_tagtableGsimDetectorHitDataDict();

  G__cpp_setup_inheritanceGsimDetectorHitDataDict();

  G__cpp_setup_typetableGsimDetectorHitDataDict();

  G__cpp_setup_memvarGsimDetectorHitDataDict();

  G__cpp_setup_memfuncGsimDetectorHitDataDict();
  G__cpp_setup_globalGsimDetectorHitDataDict();
  G__cpp_setup_funcGsimDetectorHitDataDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncGsimDetectorHitDataDict();
  return;
}
class G__cpp_setup_initGsimDetectorHitDataDict {
  public:
    G__cpp_setup_initGsimDetectorHitDataDict() { G__add_setup_func("GsimDetectorHitDataDict",(G__incsetup)(&G__cpp_setupGsimDetectorHitDataDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initGsimDetectorHitDataDict() { G__remove_setup_func("GsimDetectorHitDataDict"); }
};
G__cpp_setup_initGsimDetectorHitDataDict G__cpp_setup_initializerGsimDetectorHitDataDict;

