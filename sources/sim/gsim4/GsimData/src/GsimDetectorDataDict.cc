//
// File generated by rootcint at Sun Jun  3 02:38:14 2012

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdIGsimDetectorDataDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "GsimDetectorDataDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void GsimDetectorData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_GsimDetectorData(void *p = 0);
   static void *newArray_GsimDetectorData(Long_t size, void *p);
   static void delete_GsimDetectorData(void *p);
   static void deleteArray_GsimDetectorData(void *p);
   static void destruct_GsimDetectorData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GsimDetectorData*)
   {
      ::GsimDetectorData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GsimDetectorData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GsimDetectorData", ::GsimDetectorData::Class_Version(), "././GsimData/GsimDetectorData.h", 26,
                  typeid(::GsimDetectorData), DefineBehavior(ptr, ptr),
                  &::GsimDetectorData::Dictionary, isa_proxy, 4,
                  sizeof(::GsimDetectorData) );
      instance.SetNew(&new_GsimDetectorData);
      instance.SetNewArray(&newArray_GsimDetectorData);
      instance.SetDelete(&delete_GsimDetectorData);
      instance.SetDeleteArray(&deleteArray_GsimDetectorData);
      instance.SetDestructor(&destruct_GsimDetectorData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GsimDetectorData*)
   {
      return GenerateInitInstanceLocal((::GsimDetectorData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GsimDetectorData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *GsimDetectorData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *GsimDetectorData::Class_Name()
{
   return "GsimDetectorData";
}

//______________________________________________________________________________
const char *GsimDetectorData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GsimDetectorData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GsimDetectorData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GsimDetectorData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GsimDetectorData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GsimDetectorData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GsimDetectorData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GsimDetectorData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void GsimDetectorData::Streamer(TBuffer &R__b)
{
   // Stream an object of class GsimDetectorData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GsimDetectorData::Class(),this);
   } else {
      R__b.WriteClassBuffer(GsimDetectorData::Class(),this);
   }
}

//______________________________________________________________________________
void GsimDetectorData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class GsimDetectorData.
      TClass *R__cl = ::GsimDetectorData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_fullName", &m_fullName);
      R__insp.InspectMember(m_fullName, "m_fullName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_briefName", &m_briefName);
      R__insp.InspectMember(m_briefName, "m_briefName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_className", &m_className);
      R__insp.InspectMember(m_className, "m_className.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_detectorID", &m_detectorID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_briefDetectorID", &m_briefDetectorID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_motherDetectorID", &m_motherDetectorID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_physiDetector", &m_physiDetector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_localCenterVector", &m_localCenterVector);
      R__insp.InspectMember(m_localCenterVector, "m_localCenterVector.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_translationVector", &m_translationVector);
      R__insp.InspectMember(m_translationVector, "m_translationVector.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_rotationVector", &m_rotationVector);
      R__insp.InspectMember(m_rotationVector, "m_rotationVector.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_magneticFieldVector", &m_magneticFieldVector);
      R__insp.InspectMember(m_magneticFieldVector, "m_magneticFieldVector.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_position", &m_position);
      R__insp.InspectMember(m_position, "m_position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_userLimitsStepMax", &m_userLimitsStepMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_userLimitsTrackMax", &m_userLimitsTrackMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_userLimitsTimeMax", &m_userLimitsTimeMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_userLimitsEkinMin", &m_userLimitsEkinMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_userLimitsRangeMin", &m_userLimitsRangeMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_outerMaterialName", &m_outerMaterialName);
      R__insp.InspectMember(m_outerMaterialName, "m_outerMaterialName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_outerColorName", &m_outerColorName);
      R__insp.InspectMember(m_outerColorName, "m_outerColorName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_isOuterVisible", &m_isOuterVisible);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_numberOfParameters", &m_numberOfParameters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_parameterArray", &m_parameterArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_fastSimulationLevel", &m_fastSimulationLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_userFlag", &m_userFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_nDaughter", &m_nDaughter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_daughterIDArray", &m_daughterIDArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_numberOfSensitiveDetector", &m_numberOfSensitiveDetector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_sensitiveDetectorName", &m_sensitiveDetectorName);
      R__insp.InspectMember(m_sensitiveDetectorName, "m_sensitiveDetectorName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_sensitiveDetectorWithHit", &m_sensitiveDetectorWithHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_sensitiveDetectorWithDigi", &m_sensitiveDetectorWithDigi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_copyNo", &m_copyNo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_nClone", &m_nClone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_clonedCopyNoArray", &m_clonedCopyNoArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_clonedTranslationXArray", &m_clonedTranslationXArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_clonedTranslationYArray", &m_clonedTranslationYArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_clonedTranslationZArray", &m_clonedTranslationZArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_clonedRotationVectorXArray", &m_clonedRotationVectorXArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_clonedRotationVectorYArray", &m_clonedRotationVectorYArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_clonedRotationVectorZArray", &m_clonedRotationVectorZArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_clonedPositionXArray", &m_clonedPositionXArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_clonedPositionYArray", &m_clonedPositionYArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_clonedPositionZArray", &m_clonedPositionZArray);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_GsimDetectorData(void *p) {
      return  p ? new(p) ::GsimDetectorData : new ::GsimDetectorData;
   }
   static void *newArray_GsimDetectorData(Long_t nElements, void *p) {
      return p ? new(p) ::GsimDetectorData[nElements] : new ::GsimDetectorData[nElements];
   }
   // Wrapper around operator delete
   static void delete_GsimDetectorData(void *p) {
      delete ((::GsimDetectorData*)p);
   }
   static void deleteArray_GsimDetectorData(void *p) {
      delete [] ((::GsimDetectorData*)p);
   }
   static void destruct_GsimDetectorData(void *p) {
      typedef ::GsimDetectorData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GsimDetectorData

/********************************************************
* src/GsimDetectorDataDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableGsimDetectorDataDict();

extern "C" void G__set_cpp_environmentGsimDetectorDataDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("./GsimData/GsimDetectorData.h");
  G__cpp_reset_tagtableGsimDetectorDataDict();
}
#include <new>
extern "C" int G__cpp_dllrevGsimDetectorDataDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* GsimDetectorData */
static int G__GsimDetectorDataDict_214_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GsimDetectorData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GsimDetectorData[n];
     } else {
       p = new((void*) gvp) GsimDetectorData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GsimDetectorData;
     } else {
       p = new((void*) gvp) GsimDetectorData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_GsimDetectorData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimDetectorDataDict_214_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GsimDetectorData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new GsimDetectorData(*(GsimDetectorData*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) GsimDetectorData(*(GsimDetectorData*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_GsimDetectorData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimDetectorDataDict_214_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GsimDetectorData*) G__getstructoffset())->initializeDataValues();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimDetectorDataDict_214_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Int_t>* pobj;
         vector<Int_t> xobj = ((GsimDetectorData*) G__getstructoffset())->getChannelList();
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimDetectorDataDict_214_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((GsimDetectorData*) G__getstructoffset())->getPosition((Int_t) G__int(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimDetectorDataDict_214_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GsimDetectorData*) G__getstructoffset())->import(*(GsimDetectorData*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimDetectorDataDict_214_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const GsimDetectorData& obj = ((GsimDetectorData*) G__getstructoffset())->operator=(*(GsimDetectorData*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimDetectorDataDict_214_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GsimDetectorData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimDetectorDataDict_214_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GsimDetectorData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimDetectorDataDict_214_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GsimDetectorData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimDetectorDataDict_214_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GsimDetectorData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimDetectorDataDict_214_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GsimDetectorData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimDetectorDataDict_214_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GsimDetectorData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimDetectorDataDict_214_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GsimDetectorData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimDetectorDataDict_214_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GsimDetectorData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GsimDetectorDataDict_214_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GsimDetectorData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GsimDetectorData G__TGsimDetectorData;
static int G__GsimDetectorDataDict_214_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GsimDetectorData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GsimDetectorData*) (soff+(sizeof(GsimDetectorData)*i)))->~G__TGsimDetectorData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GsimDetectorData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GsimDetectorData*) (soff))->~G__TGsimDetectorData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* GsimDetectorData */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncGsimDetectorDataDict {
 public:
  G__Sizep2memfuncGsimDetectorDataDict(): p(&G__Sizep2memfuncGsimDetectorDataDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncGsimDetectorDataDict::*p)();
};

size_t G__get_sizep2memfuncGsimDetectorDataDict()
{
  G__Sizep2memfuncGsimDetectorDataDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceGsimDetectorDataDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GsimDetectorDataDictLN_GsimDetectorData))) {
     GsimDetectorData *G__Lderived;
     G__Lderived=(GsimDetectorData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GsimDetectorDataDictLN_GsimDetectorData),G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableGsimDetectorDataDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* GsimDetectorData */
static void G__setup_memvarGsimDetectorData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GsimDetectorDataDictLN_GsimDetectorData));
   { GsimDetectorData *p; p=(GsimDetectorData*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->m_fullName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TString),-1,-1,1,"m_fullName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_briefName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TString),-1,-1,1,"m_briefName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_className)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TString),-1,-1,1,"m_className=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_detectorID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"m_detectorID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_briefDetectorID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"m_briefDetectorID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_motherDetectorID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"m_motherDetectorID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_physiDetector)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"m_physiDetector=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_localCenterVector)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TVector3),-1,-1,1,"m_localCenterVector=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_translationVector)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TVector3),-1,-1,1,"m_translationVector=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_rotationVector)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TVector3),-1,-1,1,"m_rotationVector=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_magneticFieldVector)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TVector3),-1,-1,1,"m_magneticFieldVector=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TVector3),-1,-1,1,"m_position=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_userLimitsStepMax)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"m_userLimitsStepMax=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_userLimitsTrackMax)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"m_userLimitsTrackMax=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_userLimitsTimeMax)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"m_userLimitsTimeMax=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_userLimitsEkinMin)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"m_userLimitsEkinMin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_userLimitsRangeMin)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"m_userLimitsRangeMin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_outerMaterialName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TString),-1,-1,1,"m_outerMaterialName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_outerColorName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TString),-1,-1,1,"m_outerColorName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_isOuterVisible)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"m_isOuterVisible=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_numberOfParameters)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"m_numberOfParameters=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_parameterArray)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"m_parameterArray=",0,"[m_numberOfParameters]");
   G__memvar_setup((void*)((long)(&p->m_fastSimulationLevel)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"m_fastSimulationLevel=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_userFlag)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"m_userFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_nDaughter)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"m_nDaughter=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_daughterIDArray)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"m_daughterIDArray=",0,"[m_nDaughter]");
   G__memvar_setup((void*)((long)(&p->m_numberOfSensitiveDetector)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"m_numberOfSensitiveDetector=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_sensitiveDetectorName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TString),-1,-1,1,"m_sensitiveDetectorName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_sensitiveDetectorWithHit)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"m_sensitiveDetectorWithHit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_sensitiveDetectorWithDigi)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"m_sensitiveDetectorWithDigi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_copyNo)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"m_copyNo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_nClone)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"m_nClone=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_clonedCopyNoArray)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"m_clonedCopyNoArray=",0,"[m_nClone]");
   G__memvar_setup((void*)((long)(&p->m_clonedTranslationXArray)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"m_clonedTranslationXArray=",0,"[m_nClone]");
   G__memvar_setup((void*)((long)(&p->m_clonedTranslationYArray)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"m_clonedTranslationYArray=",0,"[m_nClone]");
   G__memvar_setup((void*)((long)(&p->m_clonedTranslationZArray)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"m_clonedTranslationZArray=",0,"[m_nClone]");
   G__memvar_setup((void*)((long)(&p->m_clonedRotationVectorXArray)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"m_clonedRotationVectorXArray=",0,"[m_nClone]");
   G__memvar_setup((void*)((long)(&p->m_clonedRotationVectorYArray)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"m_clonedRotationVectorYArray=",0,"[m_nClone]");
   G__memvar_setup((void*)((long)(&p->m_clonedRotationVectorZArray)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"m_clonedRotationVectorZArray=",0,"[m_nClone]");
   G__memvar_setup((void*)((long)(&p->m_clonedPositionXArray)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"m_clonedPositionXArray=",0,"[m_nClone]");
   G__memvar_setup((void*)((long)(&p->m_clonedPositionYArray)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"m_clonedPositionYArray=",0,"[m_nClone]");
   G__memvar_setup((void*)((long)(&p->m_clonedPositionZArray)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"m_clonedPositionZArray=",0,"[m_nClone]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarGsimDetectorDataDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncGsimDetectorData(void) {
   /* GsimDetectorData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GsimDetectorDataDictLN_GsimDetectorData));
   G__memfunc_setup("GsimDetectorData",1604,G__GsimDetectorDataDict_214_0_1, 105, G__get_linked_tagnum(&G__GsimDetectorDataDictLN_GsimDetectorData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GsimDetectorData",1604,G__GsimDetectorDataDict_214_0_2, 105, G__get_linked_tagnum(&G__GsimDetectorDataDictLN_GsimDetectorData), -1, 0, 1, 1, 1, 0, "u 'GsimDetectorData' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("initializeDataValues",2076,G__GsimDetectorDataDict_214_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChannelList",1429,G__GsimDetectorDataDict_214_0_5, 117, G__get_linked_tagnum(&G__GsimDetectorDataDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPosition",1173,G__GsimDetectorDataDict_214_0_6, 117, G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TVector3), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("import",667,G__GsimDetectorDataDict_214_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'GsimDetectorData' - 11 - right", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__GsimDetectorDataDict_214_0_8, 117, G__get_linked_tagnum(&G__GsimDetectorDataDictLN_GsimDetectorData), -1, 1, 1, 1, 1, 0, "u 'GsimDetectorData' - 11 - right", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__GsimDetectorDataDict_214_0_9, 85, G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GsimDetectorData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GsimDetectorDataDict_214_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GsimDetectorData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GsimDetectorDataDict_214_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GsimDetectorData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GsimDetectorDataDict_214_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GsimDetectorData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GsimDetectorDataDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GsimDetectorDataDict_214_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GsimDetectorDataDict_214_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GsimDetectorData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GsimDetectorDataDict_214_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GsimDetectorData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GsimDetectorDataDict_214_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GsimDetectorData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GsimDetectorDataDict_214_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GsimDetectorData::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~GsimDetectorData", 1730, G__GsimDetectorDataDict_214_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncGsimDetectorDataDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalGsimDetectorDataDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcGsimDetectorDataDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__GsimDetectorDataDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_GsimDetectorData = { "GsimDetectorData" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__GsimDetectorDataDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableGsimDetectorDataDict() {
  G__GsimDetectorDataDictLN_TClass.tagnum = -1 ;
  G__GsimDetectorDataDictLN_TBuffer.tagnum = -1 ;
  G__GsimDetectorDataDictLN_TMemberInspector.tagnum = -1 ;
  G__GsimDetectorDataDictLN_TObject.tagnum = -1 ;
  G__GsimDetectorDataDictLN_TString.tagnum = -1 ;
  G__GsimDetectorDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__GsimDetectorDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GsimDetectorDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__GsimDetectorDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GsimDetectorDataDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__GsimDetectorDataDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__GsimDetectorDataDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__GsimDetectorDataDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__GsimDetectorDataDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__GsimDetectorDataDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__GsimDetectorDataDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__GsimDetectorDataDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__GsimDetectorDataDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__GsimDetectorDataDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__GsimDetectorDataDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__GsimDetectorDataDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__GsimDetectorDataDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__GsimDetectorDataDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__GsimDetectorDataDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__GsimDetectorDataDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__GsimDetectorDataDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__GsimDetectorDataDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__GsimDetectorDataDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__GsimDetectorDataDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__GsimDetectorDataDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__GsimDetectorDataDictLN_TVector3.tagnum = -1 ;
  G__GsimDetectorDataDictLN_GsimDetectorData.tagnum = -1 ;
  G__GsimDetectorDataDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__GsimDetectorDataDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableGsimDetectorDataDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_TString);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_GsimDetectorData),sizeof(GsimDetectorData),-1,294656,(char*)NULL,G__setup_memvarGsimDetectorData,G__setup_memfuncGsimDetectorData);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__GsimDetectorDataDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupGsimDetectorDataDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupGsimDetectorDataDict()");
  G__set_cpp_environmentGsimDetectorDataDict();
  G__cpp_setup_tagtableGsimDetectorDataDict();

  G__cpp_setup_inheritanceGsimDetectorDataDict();

  G__cpp_setup_typetableGsimDetectorDataDict();

  G__cpp_setup_memvarGsimDetectorDataDict();

  G__cpp_setup_memfuncGsimDetectorDataDict();
  G__cpp_setup_globalGsimDetectorDataDict();
  G__cpp_setup_funcGsimDetectorDataDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncGsimDetectorDataDict();
  return;
}
class G__cpp_setup_initGsimDetectorDataDict {
  public:
    G__cpp_setup_initGsimDetectorDataDict() { G__add_setup_func("GsimDetectorDataDict",(G__incsetup)(&G__cpp_setupGsimDetectorDataDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initGsimDetectorDataDict() { G__remove_setup_func("GsimDetectorDataDict"); }
};
G__cpp_setup_initGsimDetectorDataDict G__cpp_setup_initializerGsimDetectorDataDict;

